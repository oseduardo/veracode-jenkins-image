pipeline {

    agent any

    environment {
        vID     = credentials('veracode-creds').username
        vKEY    = credentials('veracode-creds').password
        //SRCCLR_API_TOKEN = credentials('SRCCLR_API_TOKEN')
    }

    triggers {
        GenericTrigger(
            genericHeaderVariables: [
                [key: 'X-GitHub-Event', regexpFilter: '']
            ],
            genericVariables: [
                [key: 'ref', value: '$.ref'],
                [key: 'action', value: '$.action', defaultValue: 'null']
            ],
            
            causeString: 'Triggered on $ref',

            token: 'mytoken123',
            tokenCredentialId: '',
            
            printContributedVariables: true,
            printPostContent: true,
        )
    }

    stages {
        stage('Valida Conectividad'){
            agent {
                docker { 
                    //It uses veracode-agente:latest docker image to run pipeline stages
                    image 'veracode-agente:latest'
                    args '-e VERACODE_API_KEY_ID=$vID -e VERACODE_API_KEY_SECRET=$vKEY -i --entrypoint='
                    reuseNode true
                }
            }
            steps{
                script{
                    echo "===================================================="
                    echo "== [INFO] Setting up Veracode Credentials File... =="
                    echo "===================================================="
                    echo ""
                    withCredentials([usernamePassword(credentialsId: 'veracode-creds', usernameVariable: 'VID', passwordVariable: 'VKEY')]){
                        def myVID = VID
                        def myVKEY = VKEY
                        sh "echo '[default]\nveracode_api_key_id=${myVID}\nveracode_api_key_secret=${myVKEY}' > ${HOME}/.veracode/credentials"
                    echo ""
                    echo ""

                    echo "======================================================"
                    echo "== [INFO] Running connectivity validation script... =="
                    echo "======================================================"
                    echo ""
                    sh './valida_conectividad/valida-conectividad.sh'
                    }
                }
            }
        }
    }
}